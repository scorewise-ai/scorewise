<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Assignment - ScoreWise AI</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        'inter': ['Inter', 'sans-serif'],
                    },
                    colors: {
                        'primary': '#6366f1',
                        'secondary': '#8b5cf6',
                    }
                }
            }
        }
    </script>
</head>
<body class="font-inter bg-gradient-to-br from-blue-50 to-purple-50 min-h-screen">
    <!-- Navigation -->
    <nav class="bg-white shadow-sm border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <div class="flex items-center">
                    <div class="text-2xl font-bold text-primary">ScoreWise AI</div>
                    <div class="ml-2 text-sm text-gray-500">by Fusion Labs</div>
                </div>
                <div class="flex items-center space-x-6">
                    <a href="/" class="text-gray-700 hover:text-primary transition-colors">Home</a>
                    <a href="/pricing" class="text-gray-700 hover:text-primary transition-colors">Pricing</a>
                    {% if user %}
                        <a href="/upload" class="text-primary font-semibold">Upload</a>
                        <a href="/dashboard" class="text-gray-700 hover:text-primary transition-colors">Dashboard</a>
                        <form method="post" action="/auth/logout" class="inline">
                            <button type="submit" class="text-gray-700 hover:text-primary transition-colors">Logout</button>
                        </form>
                    {% else %}
                        <a href="/register" class="bg-secondary text-white px-4 py-2 rounded-lg hover:bg-secondary/90 transition-colors">
                            Register
                        </a>
                        <button onclick="showLoginModal()" class="bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary/90 transition-colors">
                            Sign In
                        </button>
                    {% endif %}
                </div>
            </div>
        </div>
    </nav>

    <!-- Upload Form -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="bg-white rounded-lg shadow-sm border p-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-2">Upload STEM Assignment</h1>
            <p class="text-gray-600 mb-8">Upload your assignment and student submissions for AI-powered grading</p>

            <!-- Error/Success Messages -->
            <div id="message" class="hidden mb-6"></div>

            <form id="uploadForm" action="/api/upload" method="post" enctype="multipart/form-data">
                <!-- Subject Selection - FIXED: Only STEM subjects -->
                <div class="mb-6">
                    <label for="subject" class="block text-sm font-medium text-gray-700 mb-2">
                        STEM Subject <span class="text-red-500">*</span>
                    </label>
                    <select id="subject" name="subject" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary">
                        <option value="">Choose a STEM subject...</option>
                        <option value="algebra">Algebra</option>
                        <option value="biology">Biology</option>
                        <option value="calculus">Calculus</option>
                        <option value="chemistry">Chemistry</option>
                        <option value="engineering">Engineering</option>
                        <option value="physics">Physics</option>
                    </select>
                </div>

                <!-- Assignment File -->
                <div class="mb-6">
                    <label for="assignment_file" class="block text-sm font-medium text-gray-700 mb-2">
                        Assignment Instructions <span class="text-red-500">*</span>
                    </label>
                    <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-lg hover:border-primary transition-colors drop-zone" 
                         data-target="assignment_file">
                        <div class="space-y-1 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                            </svg>
                            <div class="flex text-sm text-gray-600">
                                <label for="assignment_file" class="relative cursor-pointer bg-white rounded-md font-medium text-primary hover:text-primary/80 focus-within:outline-none focus-within:ring-2 focus-within:ring-primary">
                                    <span>Click to upload</span>
                                    <input id="assignment_file" name="assignment_file" type="file" accept=".pdf" required class="sr-only">
                                </label>
                                <p class="pl-1">or drag and drop</p>
                            </div>
                            <p class="text-xs text-gray-500">PDF files only (Max 10MB)</p>
                        </div>
                    </div>
                </div>

                <!-- Student Submissions -->
                <div class="mb-6">
                    <label for="student_submissions" class="block text-sm font-medium text-gray-700 mb-2">
                        Student Submissions <span class="text-red-500">*</span>
                    </label>
                    <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-lg hover:border-primary transition-colors drop-zone" 
                         data-target="student_submissions">
                        <div class="space-y-1 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                            </svg>
                            <div class="flex text-sm text-gray-600">
                                <label for="student_submissions" class="relative cursor-pointer bg-white rounded-md font-medium text-primary hover:text-primary/80 focus-within:outline-none focus-within:ring-2 focus-within:ring-primary">
                                    <span>Click to upload</span>
                                    <input id="student_submissions" name="student_submissions" type="file" accept=".pdf" multiple required class="sr-only">
                                </label>
                                <p class="pl-1">or drag and drop</p>
                            </div>
                            <p class="text-xs text-gray-500">PDF files only, multiple files allowed (Max 10MB each)</p>
                        </div>
                    </div>
                </div>

                <!-- Optional: Solution File -->
                <div class="mb-6">
                    <label for="solution_file" class="block text-sm font-medium text-gray-700 mb-2">
                        Solution/Answer Key (Optional)
                    </label>
                    <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-lg hover:border-primary transition-colors drop-zone" 
                         data-target="solution_file">
                        <div class="space-y-1 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                            </svg>
                            <div class="flex text-sm text-gray-600">
                                <label for="solution_file" class="relative cursor-pointer bg-white rounded-md font-medium text-primary hover:text-primary/80 focus-within:outline-none focus-within:ring-2 focus-within:ring-primary">
                                    <span>Click to upload</span>
                                    <input id="solution_file" name="solution_file" type="file" accept=".pdf" class="sr-only">
                                </label>
                                <p class="pl-1">or drag and drop</p>
                            </div>
                            <p class="text-xs text-gray-500">PDF file only (Max 10MB)</p>
                        </div>
                    </div>
                </div>

                <!-- Optional: Custom Rubric -->
                <div class="mb-8">
                    <label for="custom_rubric" class="block text-sm font-medium text-gray-700 mb-2">
                        Custom Rubric (Optional)
                    </label>
                    <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-lg hover:border-primary transition-colors drop-zone" 
                         data-target="custom_rubric">
                        <div class="space-y-1 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                            </svg>
                            <div class="flex text-sm text-gray-600">
                                <label for="custom_rubric" class="relative cursor-pointer bg-white rounded-md font-medium text-primary hover:text-primary/80 focus-within:outline-none focus-within:ring-2 focus-within:ring-primary">
                                    <span>Click to upload</span>
                                    <input id="custom_rubric" name="custom_rubric" type="file" accept=".pdf" class="sr-only">
                                </label>
                                <p class="pl-1">or drag and drop</p>
                            </div>
                            <p class="text-xs text-gray-500">PDF file only (Max 10MB)</p>
                        </div>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="flex justify-end">
                    <button type="submit" id="submitBtn" class="bg-primary text-white px-8 py-3 rounded-lg font-semibold hover:bg-primary/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed">
                        Start Grading
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Footer -->
    <footer class="bg-white border-t mt-16">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="text-center text-gray-500">
                <p>&copy; 2025 Fusion Labs. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script>
        // Drag and drop functionality
        document.querySelectorAll('.drop-zone').forEach(zone => {
            const targetInput = document.getElementById(zone.dataset.target);
            
            // Prevent default drag behaviors
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                zone.addEventListener(eventName, preventDefaults, false);
                document.body.addEventListener(eventName, preventDefaults, false);
            });

            // Highlight drop zone when item is dragged over it
            ['dragenter', 'dragover'].forEach(eventName => {
                zone.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                zone.addEventListener(eventName, unhighlight, false);
            });

            // Handle dropped files
            zone.addEventListener('drop', handleDrop, false);

            // Handle click to upload
            zone.addEventListener('click', () => targetInput.click());

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            function highlight(e) {
                zone.classList.add('border-primary');
            }

            function unhighlight(e) {
                zone.classList.remove('border-primary');
            }

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;

                // Validate files
                for (let file of files) {
                    if (!file.name.toLowerCase().endsWith('.pdf')) {
                        alert(`Only PDF files are allowed. "${file.name}" is not a PDF.`);
                        return;
                    }
                    if (file.size > 10 * 1024 * 1024) {
                        alert(`File "${file.name}" exceeds 10MB limit.`);
                        return;
                    }
                }

                // Set files to input
                targetInput.files = files;
                updateFileDisplay(targetInput);
            }
        });

        // File input change handlers
        document.querySelectorAll('input[type="file"]').forEach(input => {
            input.addEventListener('change', function() {
                updateFileDisplay(this);
            });
        });

        function updateFileDisplay(input) {
            const zone = document.querySelector(`[data-target="${input.id}"]`);
            const label = zone.querySelector('label span');
            
            if (input.files.length > 0) {
                if (input.multiple) {
                    label.textContent = `${input.files.length} file(s) selected`;
                } else {
                    label.textContent = input.files[0].name;
                }
            } else {
                label.textContent = 'Click to upload';
            }
        }

        // Form submission
        document.getElementById('uploadForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const submitBtn = document.getElementById('submitBtn');
            const messageDiv = document.getElementById('message');
            
            // Show loading state
            submitBtn.disabled = true;
            submitBtn.textContent = 'Starting upload...';
            messageDiv.className = 'hidden';
            
            try {
                const formData = new FormData();
                
                // Add form fields
                formData.append('subject', document.getElementById('subject').value);
                
                // Add assignment file
                const assignmentFile = document.getElementById('assignment_file').files[0];
                if (assignmentFile) {
                    formData.append('assignment_file', assignmentFile);
                }
                
                // Add student submissions (multiple files)
                const submissions = document.getElementById('student_submissions').files;
                for (let i = 0; i < submissions.length; i++) {
                    formData.append('student_submissions', submissions[i]);
                }
                
                // Add optional files
                const solutionFile = document.getElementById('solution_file').files[0];
                if (solutionFile) {
                    formData.append('solution_file', solutionFile);
                }
                
                const rubricFile = document.getElementById('custom_rubric').files[0];
                if (rubricFile) {
                    formData.append('custom_rubric', rubricFile);
                }
                
                // Basic validation
                if (!formData.get('subject')) {
                    throw new Error('Please select a STEM subject');
                }
                
                if (!formData.get('assignment_file')) {
                    throw new Error('Please upload an assignment file');
                }
                
                if (!formData.get('student_submissions')) {
                    throw new Error('Please upload at least one student submission');
                }
                
                const response = await fetch('/api/upload', {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    messageDiv.className = 'bg-green-50 border border-green-200 rounded-lg p-4 mb-6';
                    messageDiv.innerHTML = `
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="ml-3">
                                <h3 class="text-sm font-medium text-green-800">Upload Successful!</h3>
                                <div class="mt-2 text-sm text-green-700">
                                    <p>Your assignment is being processed. You'll be redirected to your dashboard to monitor progress.</p>
                                </div>
                            </div>
                        </div>
                    `;
                    
                    // Redirect to dashboard after 5 seconds
                    setTimeout(() => {
                        window.location.href = '/dashboard';
                    }, 5000);
                    
                } else {
                    throw new Error(result.detail || 'Upload failed');
                }
                
            } catch (error) {
                messageDiv.className = 'bg-red-50 border border-red-200 rounded-lg p-4 mb-6';
                messageDiv.innerHTML = `
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="ml-3">
                            <h3 class="text-sm font-medium text-red-800">Upload Error</h3>
                            <div class="mt-2 text-sm text-red-700">
                                <p>${error.message}</p>
                            </div>
                        </div>
                    </div>
                `;
                
            } finally {
                // Reset button
                submitBtn.disabled = false;
                submitBtn.textContent = 'Start Grading';
            }
        });
    </script>
</body>
</html>
